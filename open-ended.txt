Q1: What happens step by step when you type a command in bash (e.g., ls) until you see the output?
the shell (Bash) checks if ls is an alias or built-in,If not, it searches for the ls executable in the directories listed in $PATH
then, The shell forks a child process and uses exec() to run the program.
The kernel loads ls, which reads the current directory using system calls.
then the output is sent to the terminal.

Q2: Explain the types of processes in Linux: daemon, zombie, orphan. How can you detect them?
daemon :it's a process that runs from the begining at starting the OS and keep running in the background
it's like systemd
to detect it : ps aux | grep 'sshd\|cron\|systemd'

zombie: a child that ended its task and his parent didn't check on him so the child becomes zombie
and the kernel will delete its resoucres after few seconds
to detect it :  ps aux | grep 'Z' #search for stat 'Z' or 'Z+' 

orphan: a chile whose parent has died. and other parent will check on him like systemd
if no one checked on him, it will become a zombie
to detect it:An orphan process is a process whose parent has terminated, so it is adopted by the init process (PID 1).


Q3: Why do we need Inter-Process Communication (IPC)? List some IPC mechanisms and real-life examples.
Inter-Process Communication (IPC) is needed because processes run in isolated memory spaces and cannot directly share data. 
so the IPC allows them to communicate for tasks like data sharing.
IPC mechanisms: Pipes, Signals,Sockets
